---
layout: page
title: Friday, March 8th
sidebar: true
---

## Daily Outline

* Retrospective
* Lightning Talks on "Web Design Made Easy"
* Guest: Joe Kutner
* Guest: Paul Campbell
* 1-on-1s
* Open Source + Personal Study

## Retrospective

It's important to look back and assess what we're doing right, what we're doing wrong, celebrate victories, and analyze defeats.

### Personal Writing

Please spend the first 35 minutes of today (9:00-9:35), writing and posting an article on your class blog reflecting on one or more of the following questions:

* TrafficSpy
  * Another project in the books. How did you feel about your contribution to your team's project?
  * What did you think of Sinatra? Sequel? Would you enjoy using these tools on a larger project? Did you think their APIs were logical and reasonable, or are there changes you'd like to see?
  * Now that you really understand the problem, what would you do differently if you could go back to the beginning? Were the parts you thought would be hard actually hard? What about the parts you thought would be easy?
* Obama for America Event (if you went)
  * What stuck with you from the event yesterday?
  * Are there any patterns or ideas you'd try to implement yourself?
  * Would you go all-in, 12 hour days seven days a week, for politics?
* Big Picture
  * Are you feeling relatively comfortable with databases or is it, to paraphrase the amazing Bill O'Reilly, "data goes in, data goes out, you can't explain that!"
  * It seems that formalized project management among project groups has been pretty lax. Do you think that'll continue? Why/why not?
  * We need to start contributing to open source projects. Do you have your eye on any projects that need a little help?

### Group Conversation

Following the personal writing sessions, let's have a short group discussion reflecting on the week.

* The event yesterday: takeaways? Surprises?
* The finish of TrafficSpy was generally less dramatic than previous projects. Why?
* Were you satisfied with your end product on TS? Why/why not?
* Have you started reading HTML&CSS? What do you think of it? Any standout topics?
* What was your favorite thing/moment of the week? A best story?

## Lightning Talks

* Chelsea - Design Theory
* Elaine - Wordpress
* Raphael - Sass
* Jennifer - Compass
* Geoff - Webfonts
* Danny - Twitter Bootstrap

## Guest: Joe Kutner

* https://twitter.com/codefinger
* http://jkutner.github.com/
* Deploying with JRuby: http://pragprog.com/book/jkdepj/deploying-with-jruby
* The Healthy Programmer: http://pragprog.com/book/jkthp/the-healthy-programmer

## Guest: Paul Campbell

* https://twitter.com/paulca
* Tito.io: https://tito.io/
* FunConf: http://2012.funconf.com/
* Ãšll: http://2013.ull.ie/

## 1-on-1s

### With Jeff in Public Conference Room 1 - West

* Bradley Sheehan
* Aimee Maher
* Josh Mejia
* Logan Sears
* Erin Drummond
* James Denman
* Ron Rateau
* Blair Anderson
* Geoffrey Schorkopf
* Christopher Knight
* Phil Battos
* Elaine Tai

### With Katrina in Conference Room 1 (Downstairs)

* Jorge Tellez
* Daniel Mee
* Kareem Grant
* Danny Garcia
* Chelsea Komlo
* Shane Rogers
* Jennifer Eliuk
* Laura Steadman
* John Maddux
* Kyle Suss
* Raphael Weiner
* Paul Blackwell

## Personal Study & Open Source

Use the time this afternoon to recouperate through learning. Please remember to **respect the Friday** and put in a solid effort.

### Open Source with Frank

If you'd like to work on Open Source, join Frank in the main classroom for help getting started.

### New Study Ideas

* Continue reading HTML & CSS through Chapter 7 for Monday.
* Check out the CSS Tutorial from Mozilla Developer Network: https://developer.mozilla.org/en-US/docs/CSS/Getting_Started
* I heard you like Scrabble. Could you implement a Scrabble game that tracks multiple players, multiple scores, validates the words against a dictionary, and can print out a board? What would go into it? You can't write the game in this short of a time, but you can start sketching out the objects and ideas.

### Old Ideas

* Install Ruby 2.0 via RVM. 
  * Run some of your old code, like SalesEngine or warmups. Do things work as expected? Faster/slower?
  * Experiment with some of the new features explained in https://speakerdeck.com/shyouhei/whats-new-in-ruby-2-dot-0 and http://globaldev.co.uk/2012/11/ruby-2-0-0-preview-features/
* Read about and practice writing Rake tasks: http://jasonseifer.com/2010/04/06/rake-tutorial
  * Experimenting with writing a rake task to automate some part of your system or workflow. Could you write a rake task that deletes files in your `Downloads` folder that are older than 15 days?
* Use RSpec to review your Ruby with TestFirst.org: http://testfirst.org/learn_ruby
* Work through the [Ruby Koans](http://rubykoans.com/)
* Start experimenting with the JavaScript lessons on http://www.codecademy.com/
