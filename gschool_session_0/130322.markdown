---
layout: page
title: Friday, March 22nd
sidebar: true
---

## Daily Outline

* Retrospective
* Lightning Talks on "Open Source Ruby Apps"
* 1-on-1s
* Open Source + Personal Study + Rails Q&A

## Retrospective

It's important to look back and assess what we're doing right, what we're doing wrong, celebrate victories, and analyze defeats.

### Personal Writing

Please spend the first 35 minutes of today (9:00-9:35), writing and posting an article on your class blog reflecting on one or more of the following questions:

* We're about 1/3 of the way through the course. Are you a developer yet? How/why? What's meeting, exceeding, or falling short of your expectations?
* What do you think about Rails so far? There's a tradeoff between doing everything yourself with Sinatra versus the on-the-surface simplicity of Rails. Which makes you more comfortable? Which do you think is more productive in the short-term? Long-term?
* What was your favorite part of the week? Least favorite?
* If you could schedule one guest speaker to talk with the class, who would it be and why?

### Group Conversation

Following the personal writing sessions, let's have a short group discussion reflecting on the week.

* What stuck with you from Ben's talk yesterday?
* Based on what you've seen and learned so far, what do you want to be doing in three years?
* If you could change one thing about our schedule and format, what would it be?

## Lightning Talks

* Daniel on Spree
* Aimee on FatFreeCRM
* Logan on Diaspora
* Shane on RStatus
* Christopher on RefineryCMS
* Kyle on CopyCopter

### Post-Game

After the lightning talks, the talkers should meet with Frank to get direct feedback on your talks. The rest should get started with 1-on-1s and Self-Study.

## 1-on-1s

### With Katrina in Conference Room 1

These sessions will run 11:00-noon and 1:00-4:00.

* Raphael Weiner
* Shane Rogers
* Aimee Maher
* Jorge Tellez
* Kareem Grant
* Paul Blackwell
* Phil Battos
* Bradley Sheehan
* Christopher Knight
* Danny Garcia
* James Denman
* Jennifer Eliuk

### With Jeff in Conference Room 2 (downstairs)

These sessions will run 11:00-noon and 1:30-4:00.

* Geoffrey Schorkopf
* John Maddux
* Laura Steadman
* Logan Sears
* Blair Anderson
* Josh Mejia
* Kyle Suss
* Chelsea Komlo
* Daniel Mee
* Elaine Tai
* Erin Drummond

## Personal Study & Open Source

Use the time this afternoon to recouperate through learning. Please remember to **respect the Friday** and put in a solid effort.

### Open Source Work

We'd love to see you start contributing to Open Source projects. Please track your progress and let us know how it goes.

### Rails Q&A

At 2PM in the main classroom Frank will run a general Rails Q&A. This is not a time to ask specific questions about StoreEngine, but you're welcome to bring questions about Blogger, ContactManager, or the framework itself.

### New Study Ideas

#### Asset Pipeline

Rails' Asset Pipeline is both interesting, valuable, and frustrating. Check out the [RailsCast](http://railscasts.com/episodes/279-understanding-the-asset-pipeline), [DHH's talk from RailsConf 2011](http://www.youtube.com/watch?v=cGdCI2HhfAU), and experiment with it in your Blogger app.

#### User Authentication

Most developers blindly rush in to using the Devise to handle authentication. As soon as you try and customize behavior, though, you're in for some pain. It's very interesting and valuable to dig into how these systems work.

Rails recently added the `has_secure_password` feature to make writing your own authentication easier. Try and add registration/login/logout to your Blogger app such that:

* Visitors can signup for an account
* Only authenticated users see the comment form
* Only admins can write, edit or delete articles

You can checkout [this blog post](http://www.farbeyondprogramming.com/2011/05/rails-user-authentication-using-has_secure_password/), the [Rails Security Guide](http://guides.rubyonrails.org/security.html#user-management), and this [RailsCast](http://railscasts.com/episodes/270-authentication-in-rails-3-1).

You should also read up on [hashing and salting passwords](http://crackstation.net/hashing-security.htm).

#### User Authorization

Once you have user authentication in place you typically need to layer on authorization. Check out [this RailsCast on CanCan](http://railscasts.com/episodes/192-authorization-with-cancan) or [this one on Declarative Authorization](http://railscasts.com/episodes/188-declarative-authorization).

If you didn't yet implement your own User Auth, it's reasonable and ok to use Devise to get going quickly so you can experiment with these tools.

#### Getting Started with jQuery

Work through the new [Try jQuery](http://try.jquery.com/) course to get familiar with the most popular JavaScript library.

#### Git Workflow

We're going to talk more about git workflow for teams next week, but you could get started by studying:

* http://yehudakatz.com/2010/05/13/common-git-workflows/
* http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html
* http://dymitruk.com/blog/2012/02/05/branch-per-feature/
* http://joslynesser.com/blog/archives/2010/09/06/git-workflow-for-small-teams/

### Old Ideas

* Install Ruby 2.0 via RVM. 
  * Run some of your old code, like SalesEngine or warmups. Do things work as expected? Faster/slower?
  * Experiment with some of the new features explained in https://speakerdeck.com/shyouhei/whats-new-in-ruby-2-dot-0 and http://globaldev.co.uk/2012/11/ruby-2-0-0-preview-features/
* Read about and practice writing Rake tasks: http://jasonseifer.com/2010/04/06/rake-tutorial
  * Experimenting with writing a rake task to automate some part of your system or workflow. Could you write a rake task that deletes files in your `Downloads` folder that are older than 15 days?
* Use RSpec to review your Ruby with TestFirst.org: http://testfirst.org/learn_ruby
* Work through the [Ruby Koans](http://rubykoans.com/)
* Start experimenting with the JavaScript lessons on http://www.codecademy.com/
