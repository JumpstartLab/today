---
layout: page
title: Friday, February 22st
sidebar: true
---

## Daily Outline

* Retrospective
* Lightning Talks
* Guest Speaker: James Edward Grey II
* Open Practice Session

## Retrospective

It's important to look back and assess what we're doing right, what we're doing wrong, celebrate victories, and analyze defeats.

### Personal Writing

Please spend the first 35 minutes of today (9:00-9:35), writing and posting an article on your class blog reflecting on one or more of the following questions:

* SalesEngine
  * What was the most surprising thing about your work on the project?
  * How many hours did you put in? How many of them were valuable? Could the valuable ones exist without the invaluable? How will you replicate or change your schedule for the next project?
  * If you were going to start the project again on Tuesday, what would you do differently?
  * Focusing on the pair work process, what did your pair do well? What did you struggle with?
  * What's something that worked but you have no idea how/why?
* Becoming a Developer
  * You've finished your first real project. NOW are you a developer? Why/why not?
  * We're about to start shifting to a web context. What is interesting about that? What's nervewracking?
  * What's your favorite thing about our class (people and/or structures)?

### Group Conversation

Following the personal writing sessions, let's have a short group discussion reflecting on the week.

* What was the most confusing thing you worked on or learned this week?
* What was your least favorite class session this week?
* Do you feel like you're able to apply lessons from Eloquent Ruby in your programming?
* How are you going to "recover" from SalesEngine?

## Lightning Talks

* Shane Rogers
* Logan Sears
* Aimee Maher
* Kyle Suss
* Daniel Mee
* Christopher Knight

## Guest Speaker: James Edward Gray II

Today we'll Skype with James Edward Gray II, a legendary Ruby developer based on Oklahoma. James has been in and around Ruby for about 10 years, known for his efforts to educate new people in the community, curation of Ruby Quiz, authorship of libraries like FasterCSV, and most recently his podcast The Ruby Rogues.

* [Github](https://github.com/jeg2/)
* [Twitter](https://twitter.com/jeg2/)
* [Blog - Shades of Gray](http://blog.grayproductions.net/)
* [Ruby Rogues Podcast](http://rubyrogues.com/)

## Afternoon Work

You're still a little ways away from contributing to open source projects.
During this afternoon, please "respect the Friday" and work on honing your
development skills. Choose one or more of the following:

### Blog

#### RSS  (Auto Discoverable)  Support

* Update the **layouts/layout.haml** head to include the new link:

```
%link{rel: "alternate", type: "application/rss+xml", title: "RSS Feed",
```

```
%head
    %meta{charset: "utf-8"}/
    / Set the viewport width to device width for mobile
    %meta{content: "width=device-width, initial-scale=1.0", name: "viewport"}
    %title= data.page.title
    / Included CSS Files
    = stylesheet_link_tag "app", "theme", "ghfm"
    = javascript_include_tag "foundation/modernizr.foundation"
    %link{rel: "alternate", type: "application/rss+xml", title: "RSS Feed", href: "feed.xml"}
```

#### Code Samples

Provide better support for code samples in your blog posts:

* Update the **Gemfile**:

```ruby
gem "middleman-syntax"
gem "redcarpet"
gem "pygments.rb"
```

* Update the **config.rb**:

```ruby
set :markdown_engine, :redcarpet
set :markdown, :fenced_code_blocks => true, :smartypants => true

activate :syntax,
         :linenos => 'inline',
         :anchorlinenos => true,
         :linenostart => 2
```

* Add the [stylesheet](https://raw.github.com/JumpstartLab/gschool-blog/master/source/stylesheets/ghfm.css) to your **source/stylesheets** folder.

* Update the **layouts/layout.haml** head to include the new stylesheet:

```
= stylesheet_link_tag "app", "theme", "ghfm"
```

```
%head
    %meta{charset: "utf-8"}/
    / Set the viewport width to device width for mobile
    %meta{content: "width=device-width, initial-scale=1.0", name: "viewport"}
    %title= data.page.title
    / Included CSS Files
    = stylesheet_link_tag "app", "theme", "ghfm"
    = javascript_include_tag "foundation/modernizr.foundation"
    %link{rel: "alternate", type: "application/rss+xml", title: "RSS Feed", href: "feed.xml"}
```



Now write blog posts with code:

    ```ruby
    set :markdown_engine, :redcarpet
    set :markdown, :fenced_code_blocks => true, :smartypants => true

    activate :syntax,
             :linenos => 'inline',
             :anchorlinenos => true,
             :linenostart => 2
    ```


### Documentation

When you're not having your 1-on-1, it's time to work on Sales Engine
documenation. Divide and Conquer to get good coverage of your code.

#### [YARD](http://yardoc.org/)

{% terminal %}
$ gem install yard
$ yardoc
$ open doc/index.html
{% endterminal %}

#### YARD Format

YARD provides a [guide](http://rubydoc.info/docs/yard/file/docs/GettingStarted.md) to help you get started.

Here is an example of documenting methods:

```ruby
#
#
# @return [Array<SalesEngine::Merchant>] an array
#   of merchants that have been loaded.
def self.all
  # loading merchants
end

#
# Find the Merchant with the given ID
#
# @example Finding the merchant with id 1
#     merchant = Merchant.find_by_id(1)
#     puts merchant.name
#
# @param [Fixnum] id the id of the merchant
# @return [SalesEngine::Merchant] the merchant
#   with the id or nil if the merchant could not be found.
#
def find_by_merchant_id(id)
  # ... does something
end
```

### Checkout the Community

* Read up on the upcoming conferences that JEG2 mentioned
* Listen to the Ruby Rogues Podcast on Ruby Newbies

### Practice New Tools

* Work through the [Ruby Koans](http://rubykoans.com/)
* Try out [Guard](https://github.com/guard/guard) for automatically running your tests on file change.
* Play with [the terminal-notifier library](https://github.com/alloy/terminal-notifier) to send yourself OS X notifications. Look at the `Ruby/spec` to see examples.
* Use RVM to install JRuby and see if your warmups run the same as they do under MRI (normal Ruby). How does the speed compare? You might use the unix tool [time](http://linux.about.com/library/cmd/blcmdl1_time.htm). If you're far along in SalesEngine, it's ok to use it here but only for timing experiments.
* Start experimenting with the JavaScript lessons on http://www.codecademy.com/

## 1-on-1s

1-on-1s will be rescheduled to next week, sorry! If you have personal questions or comments, please grab Frank this afternoon.
