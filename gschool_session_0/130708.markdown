---
layout: page
title: Monday, July 8th
sidebar: true
---

## Daily Outline

* Warm-up
* Comverge Interviews
* Reviewing JavaScript Fundamentals
* Practicing JavaScript
* Reading Group
* Mastery Project Kickoff
* Guest: Randall Thomas

## Weekly Preview

* Tuesday
  * Jasmine
  * Design and Organization of JavaScript Code
  * Project Work
* Wednesday
  * Underscore.js
  * Project Work
* Thursday & Friday
  * Expo

## Comverge Interviews

Comverge is coming today to interview four of you in Public Conference Room East:

* 10:00 -- Phil Battos
* 11:00 -- Blair Anderson
* 12:30 -- Logan Sears
* 1:30 -- Josh Mejia

## Reviewing JavaScript Fundamentals

Key concepts we'll discuss:

* Where JavaScript is used (inside and outside the browser)
* Functions & syntax
* Events
* API Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript
* JavaScript Guide: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide

## Practicing JavaScript

### Beginner Level

If you're feeling like a total beginner with JavaScript...

* find someone to pair with
* read through and experiment with our JS tutorials:
  * [JavaScript in the Page](http://tutorials.jumpstartlab.com/projects/javascript/introduction/1-javascript-in-the-page.html)
  * [JavaScript Basics](http://tutorials.jumpstartlab.com/projects/javascript/introduction/2-javascript-basics.html)
  * [DOM Basics](http://tutorials.jumpstartlab.com/projects/javascript/introduction/3-dom-basics.html)
* read and work through the [MDN JavaScript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide)

### Intermediate Level

More than anything else, you just need to practice.

* find someone to pair with
* work on warmup problems in JavaScript:
  * [03-scrabble](https://github.com/JumpstartLab/warmup-exercises/tree/master/03-scrabble)
  * [12-wordy-calculator](https://github.com/JumpstartLab/warmup-exercises/tree/master/12-wordy-calculator)
  * [28-binary-secret-handshake](https://github.com/JumpstartLab/warmup-exercises/tree/master/28-binary-secret-handshake)
  * [31-anagram](https://github.com/JumpstartLab/warmup-exercises/tree/master/31-anagram)
  * [32-allergies](https://github.com/JumpstartLab/warmup-exercises/tree/master/32-allergies)

## Reading Group

Please meet in the classroom at 1pm to kickoff Eloquent JavaScript.

## Mastery Project Kickoff

The last project is here! For the mastery project we want to see what you can do.

1. Choose whether you want to work by yourself or with a group
2. Decide on a project

### Project Selection

You might choose to:

* Continue work on your individual project
* Take someone else's individual project and build upon it
* Adopt any of the past group projects and push them forward
* Start something from scratch

#### Special Projects

If your interested, there are a few existing projects/ideas you could contribute to.

##### RubyCentral RFP Site

RubyCentral has an app that runs the RFP process for RubyConf and RailsConf. Are you up for working to add new features and improve things along the way? Marty Haught will be the customer and work with you on the expectations/requirements.

##### people.jumpstartlab.com

We'd like to turn the portfolio site into a richer application that supports...

* Search
* Users so you can edit your own profile on the site
* File uploads to host your resume, screenshots, etc
* Better filtering

And to work with you on other ideas. If you're interested, Jeff will work with you on the plans.

##### Student CRM

We've been thinking about building a CRM solution for tracking students in the class. It'd be kind of similar to a FeedEngine project, creating a timeline and record tracking system. For instance, an individual student's page would show:

* An event when new notes from a 1-on-1 are posted
* Evaluation feedback from group projects
* Scores and notes from an individual evaluation
* Notes about hiring-process desires and progress
* Notes from their mentor
* Feedback from 1-on-1s
* Notification system for 1-on-1s that integrates with twilio and flowdock
  (you're up in 5 minutes with Franklin in the War Room)

Jeff has some wireframes created and would work with you on the concept.

##### Job Hunt Puzzle Master

The whole process of organizing all the job-hunt stuff is incredibly
complicated. There are a lot of moving pieces (companies, interviewers,
students, everyone's schedules, travel, leg-work, skype information and
phone details, etc, etc, etc).

If one person sets something up, then other people don't necessarily
know about it. We don't really have a trail of who talked to whom, and it would
probably be really handy to have all the companies and people involved
in a system so that we can quickly contact them for the *next* group of
students (and when we're looking for scholarship funds!).

When we reach out to people, it would be nice to know how. Is it a cold
call? Is it someone we know personally? Did we DM them on twitter? That way we would know that it might *not* be appropriate for someone else to reach out directly to them next year, and we can ask for an introduction.

Also, the whole scheduling aspect is a mess. Who is talking to whom, where? It would be helpful to have a schedule so that we all know when people are out and will not be participating in project work / class time.

Lastly, it would be really nice if each student could have a private
stream of notes (tweet-length or whatever) about the actions they're
taking in the process (reached out to ruby user group in city X, talked
to recruiter Y, got help with resume, blogged about Z, shadowed at PRQ,
technical interview with Alice Smith at Acme.

This would serve two purposes:
1) we (instructors) could keep a finger on the pulse of the hunt
2) you (each individual student) could use these to figure out later what actually worked, and would make for some interesting retrospective-type blog posts.

### Project Expectations

This is the evidence that you're now a competent, professional developer. Things we're looking for:

* Solid programming practices
  * Good object design and decomposition
  * High coverage and effectiveness in testing
  * Attention to security and performance
  * Breaking out asyncronous jobs
  * Pulling out services
* Solid business processes
  * Delivering plausible value to the user
  * Implementing a clear design and user experience
  * Effective project management with stories, iterations, etc
* Pushing your boundaries
  * Integrating at least one technology that makes you uncomfortable on the **backend** (ex: Mongo, Riak, Python, Cassandra, etc)
  * Integrating at least one technology that makes you uncomfortable on the **frontend** (ex: Backbone.js, D3, Underscore.js, Canvas, Raphael.js, Mobile/text/voice, iOS/RubyMotion)
  * Doing things the way you know they should be done, not cutting corners

### Submitting Ideas

Complete and submit a pull request to the mastery project writeups today:

https://github.com/gSchool/submissions/tree/master/projects/mastery_project

Once your pull request is approved then you're ready to begin work.

## Guest: Randall Thomas

* [Thunderbolt Labs](http://thunderboltlabs.com/)
* [On Twitter](https://twitter.com/daksis)
* [On LinkedIn](http://www.linkedin.com/in/evilmartini)

